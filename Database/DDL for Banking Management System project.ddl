-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-12-24 21:02:57 PKT
--   site:      Oracle Database 12cR2
--   type:      Oracle Database 12cR2



CREATE ROLE c##customer NOT IDENTIFIED;

CREATE ROLE c##customer1 NOT IDENTIFIED;

CREATE ROLE role1 NOT IDENTIFIED;

CREATE USER system 
    IDENTIFIED BY  
    DEFAULT TABLESPACE SYSTEM 
    ACCOUNT UNLOCK 
;

GRANT C##CUSTOMER TO SYSTEM  WITH ADMIN OPTION
;

GRANT GLOBAL QUERY REWRITE, CREATE MATERIALIZED VIEW, SELECT ANY TABLE, CREATE TABLE, UNLIMITED TABLESPACE TO SYSTEM 
;

GRANT DEQUEUE ANY QUEUE,
    ENQUEUE ANY QUEUE,
    MANAGE ANY QUEUE
TO system WITH ADMIN OPTION
;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE system.account (
    account_id      VARCHAR2(10 BYTE) NOT NULL,
    customer_id     NUMBER NOT NULL,
    account_balance NUMBER(12, 2) DEFAULT 0,
    date_opened     DATE DEFAULT sysdate,
    status          VARCHAR2(20 BYTE) DEFAULT '''Active'' -- Account status: ''Active'', ''Closed'', etc.',
    branch_id       NUMBER(4),
    account_type    NUMBER(2)
        CONSTRAINT chk_account_type_not_null NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE system LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE system.account
    ADD CONSTRAINT chk_account_id_length CHECK ( length(account_id) = 10 );

ALTER TABLE system.account
    ADD CONSTRAINT chk_customer_id_length CHECK ( length(customer_id) = 5
                                                  AND customer_id BETWEEN '20000' AND '29999' );

--  ERROR: Column ACCOUNT.ACCOUNT_BALANCE check constraint name length exceeds maximum allowed length(30) 

ALTER TABLE system.account ADD CHECK ( account_balance >= 0 );

ALTER TABLE system.account
    ADD CONSTRAINT chk_status_valid_values CHECK ( status IN ( 'Active', 'Closed', 'Inactive' ) );

GRANT UPDATE ON system.account TO c##customer;

GRANT DELETE, INSERT, SELECT, UPDATE ON system.account TO c##customer1;

ALTER TABLE system.account
    ADD CONSTRAINT account_pk PRIMARY KEY ( account_id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE system
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

CREATE TABLE system.accounttype (
    account_type_id   NUMBER(*, 0) NOT NULL,
    account_type_name VARCHAR2(50 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE system LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

GRANT DELETE ON system.accounttype TO role1;

GRANT INSERT, SELECT, UPDATE ON system.accounttype TO c##customer;

GRANT DELETE, INSERT, SELECT, UPDATE ON system.accounttype TO c##customer1;

ALTER TABLE system.accounttype
    ADD CONSTRAINT accounttype_pk PRIMARY KEY ( account_type_id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE system
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

CREATE TABLE system.auditlog (
    audit_log_id     NUMBER(8) NOT NULL,
    user_id          VARCHAR2(8 BYTE) NOT NULL,
    action_performed VARCHAR2(255 BYTE) NOT NULL,
    action_date      TIMESTAMP DEFAULT current_timestamp
)
PCTFREE 10 PCTUSED 40 TABLESPACE system LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

GRANT INSERT, UPDATE ON system.auditlog TO c##customer;

GRANT INSERT, SELECT, UPDATE ON system.auditlog TO c##customer1;

ALTER TABLE system.auditlog
    ADD CONSTRAINT auditlog_pk PRIMARY KEY ( audit_log_id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE system
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

CREATE TABLE system.bankemployee (
    employee_id  NUMBER(*, 0) NOT NULL,
    first_name   VARCHAR2(50 BYTE) NOT NULL,
    last_name    VARCHAR2(50 BYTE) NOT NULL,
    email        VARCHAR2(100 BYTE),
    phone_number VARCHAR2(20 BYTE),
    hire_date    DATE,
    position     VARCHAR2(50 BYTE),
    salary       NUMBER(10, 2),
    branch_id    NUMBER(*, 0),
    user_id      VARCHAR2(8 BYTE),
    cnic         VARCHAR2(15 BYTE) NOT NULL,
    dateofbirth  DATE NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE system LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE system.bankemployee
    ADD CONSTRAINT chk_email_format CHECK ( REGEXP_LIKE ( email,
                                                          '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$' ) );

ALTER TABLE system.bankemployee
    ADD CONSTRAINT chk_phone_number_length CHECK ( length(phone_number) = 11 );

ALTER TABLE system.bankemployee
    ADD CONSTRAINT chk_hire_date_past CHECK ( hire_date <= TO_DATE('31-DEC-9999', 'DD-MON-YYYY') );

ALTER TABLE system.bankemployee ADD CONSTRAINT chk_salary_positive CHECK ( salary > 0 );

CREATE UNIQUE INDEX system.unique_cnic ON
    system.bankemployee (
        cnic
    ASC )
        TABLESPACE system PCTFREE 10
            STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT )
        LOGGING;

GRANT DELETE, INSERT, SELECT, UPDATE ON system.bankemployee TO c##customer1;

GRANT DELETE, INSERT, SELECT, UPDATE ON system.bankemployee TO c##customer;

ALTER TABLE system.bankemployee
    ADD CONSTRAINT bankemployee_pk PRIMARY KEY ( employee_id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE system
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

ALTER TABLE system.bankemployee
    ADD CONSTRAINT bankemployee_email_un UNIQUE ( email )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE system
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

ALTER TABLE system.bankemployee
    ADD CONSTRAINT unique_cnic UNIQUE ( cnic )
        USING INDEX system.unique_cnic;

CREATE TABLE system.branch (
    branch_name    VARCHAR2(100 BYTE) NOT NULL,
    branch_address VARCHAR2(255 BYTE) NOT NULL,
    city           VARCHAR2(50 BYTE),
    postal_code    VARCHAR2(10 BYTE),
    phone_number   VARCHAR2(15 BYTE),
    branch_id      NUMBER(4) NOT NULL,
    branch_id_temp NUMBER(4)
)
PCTFREE 10 PCTUSED 40 TABLESPACE system LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE system.branch
    ADD CONSTRAINT chk_branch_phone_number_length CHECK ( length(phone_number) = 11 );

CREATE UNIQUE INDEX system.pk_branch_branchid ON
    system.branch (
        branch_id
    ASC )
        TABLESPACE system PCTFREE 10
            STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL
            DEFAULT )
        LOGGING;

GRANT DELETE, INSERT, SELECT, UPDATE ON system.branch TO c##customer;

GRANT DELETE, INSERT, SELECT, UPDATE ON system.branch TO c##customer1;

ALTER TABLE system.branch
    ADD CONSTRAINT pk_branch_branchid PRIMARY KEY ( branch_id )
        USING INDEX system.pk_branch_branchid;

CREATE TABLE system.customers (
    customer_id    NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 CACHE 20 )
    NOT NULL,
    name           VARCHAR2(100 BYTE) NOT NULL,
    date_of_birth  DATE NOT NULL,
    address        VARCHAR2(255 BYTE),
    contact_number VARCHAR2(15 BYTE) NOT NULL,
    email          VARCHAR2(100 BYTE),
    national_id    VARCHAR2(20 BYTE) NOT NULL,
    date_joined    DATE DEFAULT sysdate,
    customer_type  VARCHAR2(50 BYTE) NOT NULL,
    user_id        VARCHAR2(8 BYTE)
)
PCTFREE 10 PCTUSED 40 TABLESPACE system LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE system.customers
    ADD CONSTRAINT chk_date_of_birth_past CHECK ( date_of_birth < TO_DATE('31-DEC-9999', 'DD-MON-YYYY') );

ALTER TABLE system.customers
    ADD CONSTRAINT chk_customers_email_format CHECK ( REGEXP_LIKE ( email,
                                                                    '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$' ) );

ALTER TABLE system.customers
    ADD CONSTRAINT chk_national_id_length CHECK ( length(national_id) = 15 );

GRANT DELETE, INSERT, SELECT, UPDATE ON system.customers TO c##customer;

GRANT DELETE, INSERT, SELECT, UPDATE ON system.customers TO c##customer1;

ALTER TABLE system.customers
    ADD CONSTRAINT customers_pk PRIMARY KEY ( customer_id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE system
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

ALTER TABLE system.customers
    ADD CONSTRAINT customers_email_un UNIQUE ( email )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE system
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

ALTER TABLE system.customers
    ADD CONSTRAINT customers_national_id_un UNIQUE ( national_id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE system
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

CREATE TABLE system.transaction (
    transaction_id   NUMBER NOT NULL,
    account_id       VARCHAR2(10 BYTE) NOT NULL,
    transaction_type VARCHAR2(20 BYTE) NOT NULL,
    amount           NUMBER(12, 2) NOT NULL,
    transaction_date DATE DEFAULT sysdate,
    description      VARCHAR2(255 BYTE),
    branch_id        NUMBER(4),
    reference_id     NUMBER
)
PCTFREE 10 PCTUSED 40 TABLESPACE system LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE system.transaction
    ADD CONSTRAINT chk_transaction_type CHECK ( transaction_type IN ( 'Credit', 'Debit' ) );

--  ERROR: Column TRANSACTION.AMOUNT check constraint name length exceeds maximum allowed length(30) 

ALTER TABLE system.transaction ADD CHECK ( amount > 0 );

GRANT DELETE, INSERT, SELECT, UPDATE ON system.transaction TO c##customer;

GRANT DELETE, INSERT, SELECT, UPDATE ON system.transaction TO c##customer1;

ALTER TABLE system.transaction
    ADD CONSTRAINT transaction_pk PRIMARY KEY ( transaction_id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE system
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

CREATE TABLE system.users (
    user_id            VARCHAR2(8 BYTE) NOT NULL,
    username           VARCHAR2(50 BYTE) NOT NULL,
    passwordhash       VARCHAR2(255 BYTE) NOT NULL,
    role               VARCHAR2(50 BYTE),
    last_login         TIMESTAMP,
    customer_id        NUMBER(*, 0),
    employee_id        NUMBER(*, 0),
    email              VARCHAR2(255 BYTE) NOT NULL,
    failedloginattempt NUMBER(3) DEFAULT 0,
    status             VARCHAR2(7 BYTE) DEFAULT 'Active'
)
PCTFREE 10 PCTUSED 40 TABLESPACE system LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

--  ERROR: Column USERS.FAILEDLOGINATTEMPT check constraint name length exceeds maximum allowed length(30) 

ALTER TABLE system.users ADD CHECK ( failedloginattempt >= 0 );

ALTER TABLE system.users
    ADD CHECK ( status IN ( 'Active', 'Blocked' ) );

GRANT DELETE, INSERT, SELECT, UPDATE ON system.users TO c##customer;

GRANT DELETE, INSERT, SELECT, UPDATE ON system.users TO c##customer1;

ALTER TABLE system.users
    ADD CONSTRAINT users_pk PRIMARY KEY ( user_id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE system
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

ALTER TABLE system.users
    ADD CONSTRAINT users_username_un UNIQUE ( username )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE system
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

ALTER TABLE system.transaction
    ADD CONSTRAINT fk_account_id FOREIGN KEY ( account_id )
        REFERENCES system.account ( account_id )
    NOT DEFERRABLE;

ALTER TABLE system.account
    ADD CONSTRAINT fk_account_type FOREIGN KEY ( account_type )
        REFERENCES system.accounttype ( account_type_id )
    NOT DEFERRABLE;

ALTER TABLE system.auditlog
    ADD CONSTRAINT fk_audit_user FOREIGN KEY ( user_id )
        REFERENCES system.users ( user_id )
    NOT DEFERRABLE;

ALTER TABLE system.account
    ADD CONSTRAINT fk_branch_id_accounts FOREIGN KEY ( branch_id )
        REFERENCES system.branch ( branch_id )
    NOT DEFERRABLE;

ALTER TABLE system.bankemployee
    ADD CONSTRAINT fk_branch_id_bankemployee FOREIGN KEY ( branch_id )
        REFERENCES system.branch ( branch_id )
    NOT DEFERRABLE;

ALTER TABLE system.transaction
    ADD CONSTRAINT fk_branch_id_transaction FOREIGN KEY ( branch_id )
        REFERENCES system.branch ( branch_id )
    NOT DEFERRABLE;

ALTER TABLE system.account
    ADD CONSTRAINT fk_customer_id FOREIGN KEY ( customer_id )
        REFERENCES system.customers ( customer_id )
    NOT DEFERRABLE;

ALTER TABLE system.users
    ADD CONSTRAINT fk_customeruser FOREIGN KEY ( customer_id )
        REFERENCES system.customers ( customer_id )
    NOT DEFERRABLE;

ALTER TABLE system.users
    ADD CONSTRAINT fk_employeeuser FOREIGN KEY ( employee_id )
        REFERENCES system.bankemployee ( employee_id )
    NOT DEFERRABLE;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_CHECK_BANKEMPLOYEE_DOB 
    BEFORE INSERT OR UPDATE ON SYSTEM.BANKEMPLOYEE 
    FOR EACH ROW 
BEGIN
    IF :NEW.DateOfBirth > ADD_MONTHS(SYSDATE, -12 * 18) THEN
        RAISE_APPLICATION_ERROR(-20001, 'Employee must be at least 18 years old.');
    END IF;
END; 
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             8
-- CREATE INDEX                             2
-- ALTER TABLE                             38
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           1
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              3
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              1
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   3
-- WARNINGS                                 0
